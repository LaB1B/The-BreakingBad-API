{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","state","data","value","render","handleChange","event","setState","target","this","trim","filter","F","name","toLowerCase","startsWith","RenderItem","map","M","className","src","img","alt","nickname","birthday","occupation","status","axios","get","then","Fragment","style","cursor","onClick","type","placeholder","onChange","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qRA2EeA,E,4MAtEbC,MAAQ,CACNC,KAAO,GACPC,MAAQ,GACRC,OAAS,I,EAGXC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACJ,MAAQG,EAAME,OAAOL,QAAS,WAAY,IAAD,OACtD,GAAgC,KAA5BM,KAAKR,MAAME,MAAMO,OAAeD,KAAKF,SAAS,CAACH,OAASK,KAAKR,MAAMC,WAClE,CACH,IAAMA,EAAOO,KAAKR,MAAMG,OAAOO,QAAO,SAAAC,GAAC,OAAKA,EAAEC,KAAKC,cAAcC,WAAW,EAAKd,MAAME,MAAMW,kBAC7FL,KAAKF,SAAS,CAACH,OAASF,S,EAK9Bc,WAAa,WACX,OACE,kCACK,EAAKf,MAAMG,OAAOa,KAAI,SAAAC,GACrB,OAED,qBAAoBC,UAAU,OAA9B,SACC,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKC,IAAKF,EAAEG,IAAKC,IAAI,OAEvB,sBAAKH,UAAU,OAAf,UACI,6BAAKD,EAAEL,OACP,6CAAgBK,EAAEK,YAClB,6CAAgBL,EAAEM,YAClB,6CAAgBN,EAAEO,WAAWR,KAAI,SAAAC,GAC/B,OAAOA,EAAI,YAEb,2CAAcA,EAAEQ,iBAZXR,EAAEL,Y,uDAsBvB,WAAqB,IAAD,OAClBc,IAAMC,IAAI,6CAA6CC,MAAK,SAAC3B,GAAD,OAAU,EAAKK,SAAS,CAACL,KAAOA,EAAKA,KAAOE,OAASF,EAAKA,Y,oBAExH,WAAU,IAAD,OAIP,OACE,eAAC,IAAM4B,SAAP,WACI,8BACE,mBAAGC,MAAS,CAACC,OAAS,WAAYC,QAAW,kBAAM,EAAK1B,SAAS,CAACH,OAAS,EAAKH,MAAMC,QAAtF,gCAKA,uBAAOgC,KAAK,OAAOC,YAAc,SAAShC,MAASM,KAAKR,MAAME,MAAOiC,SAAY3B,KAAKJ,eAE5D,IAA3BI,KAAKR,MAAMC,KAAKmC,OAAe,sBAAKlB,UAAU,aAAf,UAA4B,wBAAW,2BAAoBV,KAAKO,oB,GA9DxFsB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAS3C,OACP,cAAC,IAAM4C,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.12c7ea7e.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { Component } from 'react'\nimport \"./App.css\"\n\nclass App extends Component {\n  state = {\n    data : [],\n    value : \"\",\n    render : [],\n  }\n\n  handleChange = (event) => {\n    this.setState({value : event.target.value} , function() {\n      if (this.state.value.trim() === \"\") this.setState({render : this.state.data})\n      else {\n        const data = this.state.render.filter(F => (F.name.toLowerCase().startsWith(this.state.value.toLowerCase())))\n        this.setState({render : data})\n      }\n    })\n  }\n\n  RenderItem = () => {\n    return (\n      <section>\n          {this.state.render.map(M => {\n            return (\n            \n           <div key = {M.name} className=\"card\">\n            <div className=\"content\">\n              <div className=\"front\">\n                <img src={M.img} alt=\"\"/>\n              </div>\n              <div className=\"back\">\n                  <h2>{M.name}</h2>\n                  <h4>nickname : {M.nickname}</h4>\n                  <h5>birthday : {M.birthday}</h5>\n                  <h5>occupation {M.occupation.map(M => {\n                    return M + \" , \"\n                  })}</h5>\n                  <h5>status : {M.status}</h5>\n              </div>\n            </div>\n          </div>\n            )\n          })}\n          </section>\n    )\n  }\n\n  componentDidMount() {\n    axios.get(\"https://breakingbadapi.com/api/characters\").then((data) => this.setState({data : data.data , render : data.data}))\n  }\n  render() {\n    \n    \n\n    return (\n      <React.Fragment>\n          <nav>\n            <p style = {{cursor : 'pointer'}} onClick = {() => this.setState({render : this.state.data})}>\n\n              the breaking bad \n            </p>\n          </nav>\n            <input type=\"text\" placeholder = \"search\" value = {this.state.value} onChange = {this.handleChange} />\n\n          {this.state.data.length === 0 ? <div className=\"lds-ripple\"><div></div><div></div></div> : this.RenderItem() }\n          \n          \n      </React.Fragment>\n    )\n  }\n  \n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n// import \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}